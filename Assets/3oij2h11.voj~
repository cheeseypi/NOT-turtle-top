using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class TwinStickPlayerController : MonoBehaviour
{
    public float movementSpeed = .06f;
    public float brakeForce = .1f;

    private Rigidbody2D _rigidBody;
    private BoxCollider2D _boxCollider;
    private TopMotion _topMotionComp;
    private Vector2 _lastVelocity;

    private bool _braking = false;
    private Vector2 _motion = new Vector2(0, 0);
    private Vector2? _shootDirection = null;
    // Start is called before the first frame update
    void Start()
    {
        _rigidBody = GetComponent<Rigidbody2D>();
        _boxCollider = GetComponent<BoxCollider2D>();
        _topMotionComp = GetComponent<TopMotion>();
    }

    // Update is called once per frame
    void Update()
    {
        _rigidBody.velocity += _motion * movementSpeed;
        if (_braking)
        {
            if (_rigidBody.velocity.magnitude > 1)
            {
                _rigidBody.velocity -= _rigidBody.velocity.normalized * brakeForce;
            }
            else
            {
                _rigidBody.velocity -= _rigidBody.velocity * brakeForce;
            }
        }
        if (_shootDirection.HasValue)
        {
            _rigidBody.velocity = _shootDirection.Value.normalized * (_rigidBody.velocity.magnitude + _topMotionComp.maxVelocity) / 2
        }
    }

    public void Move(InputAction.CallbackContext context)
    {
        _motion = (Vector2) context.action.ReadValueAsObject();
        Debug.Log("MOVE: " + _motion);
    }
    public void Brake(InputAction.CallbackContext context)
    {
        _braking = context.performed;
        Debug.Log("BRAKE: " + context.performed);
    }
    public void Shoot(InputAction.CallbackContext context)
    {
        if (context.canceled)
            _shootDirection = null;
        else
            _shootDirection = ((Vector2)context.action.ReadValueAsObject()).normalized;
        Debug.Log("SHOOT: " + _shootDirection);
    }
}
